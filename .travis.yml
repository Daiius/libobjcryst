sudo: required

language: cpp

os:
  - linux
  - osx

env:
  - MYUSEMC=true MYPYTHON_VERSION=2.7
  - MYUSEMC=true MYPYTHON_VERSION=3.5
  - MYUSEMC=true MYPYTHON_VERSION=3.6
  - MYUSEMC=false

git:
  depth: 999999

branches:
  except:
    - /^v[0-9]/
    - /^upstream-/


before_install:
  - MYNAME=libobjcryst
    # travis virtual hosts have 2 cores as per https://goo.gl/DQy4oW
  - MYNCPU=2
  - umask 022
  - git fetch origin --tags
  - NOSYS=true; NOAPT=true; NOBREW=true; NOMC=true
  - if ${MYUSEMC}; then
        NOMC=false;
    elif [[ ${TRAVIS_OS_NAME} == linux ]]; then
        NOAPT=false; NOSYS=false;
        MYPIPFLAGS="--user";
    elif [[ ${TRAVIS_OS_NAME} == osx ]]; then
        NOBREW=false; NOSYS=false;
        MYPIPFLAGS="--user";
    fi
  - MYMCREPO=https://repo.continuum.io/miniconda
  - case ${TRAVIS_OS_NAME} in
    linux)
        MYMCBUNDLE=Miniconda2-latest-Linux-x86_64.sh ;;
    osx)
        MYMCBUNDLE=Miniconda2-latest-MacOSX-x86_64.sh ;;
    *)
        echo "Unsupported operating system." >&2;
        exit 2 ;;
    esac

  - mkdir -p ~/pkgs

  - $NOMC || pushd ~/pkgs
  - $NOMC || wget --timestamping ${MYMCREPO}/${MYMCBUNDLE}
  - $NOMC || test -x ~/mc/bin/conda || bash ${MYMCBUNDLE} -b -f -p ~/mc
  - $NOMC || popd
  - $NOMC || source ~/mc/bin/activate root
  - $NOMC || conda update --yes conda
  - $NOMC || conda install --yes conda-build jinja2
  - $NOMC || conda create --name=testenv --yes python=${MYPYTHON_VERSION}
  - $NOMC || conda config --add channels diffpy

  - $NOAPT || test "${TRAVIS_OS_NAME}" = "linux" || exit $?
  - $NOAPT || sudo apt-get update -qq
  - $NOAPT || sudo apt-get install -y
                  libboost-all-dev python-pip build-essential scons

  - $NOBREW || test "${TRAVIS_OS_NAME}" = "osx" || exit $?
  - $NOBREW || brew update
  - $NOBREW || brew install scons

  - $NOSYS || scons sdist
  - $NOSYS || MYTARBUNDLE="$(ls -t "${PWD}"/*.tar.gz | head -1)"
  - $NOSYS || pushd ~/pkgs
  - $NOSYS || tar xzf "${MYTARBUNDLE}"
  - $NOSYS || popd


install:
  - $NOMC || conda build --python=${MYPYTHON_VERSION} conda-recipe
  - $NOMC || conda render --python=${MYPYTHON_VERSION} --output conda-recipe |
                sed 's,.*/,,; s/[.]tar[.]bz2$//; s/-/=/g' > /tmp/mypackage.txt
  - $NOMC || source activate testenv
  - $NOMC || conda install --yes --use-local --file=/tmp/mypackage.txt
  - $NOMC || MYPREFIX="${HOME}/mc/envs/testenv"

  - MYSUDO=
  - $NOAPT || MYSUDO=sudo
  - $NOSYS || cd ~/pkgs/"$(basename "${MYTARBUNDLE}" .tar.gz)"
  - $NOSYS || scons -j $MYNCPU build=fast
  - $NOSYS || $MYSUDO scons build=fast install
  # Ensure libObjCryst cannot be loaded from the work directory.
  - $NOSYS || $MYSUDO scons -Q --clean build=fast lib
  - $NOSYS || MYPREFIX=/usr/local

  # Verify version of the installed library.
  - MYINCLUDE="${MYPREFIX}/include"
  - MYLIB="${MYPREFIX}/lib"
  - MYVERSION="${MYINCLUDE}/ObjCryst/version.h"
  - MYGIT_REV=$(grep '^#define LIBOBJCRYST_GIT_SHA' "$MYVERSION" | cut -d '"' -f 2)
  - if [[ "${TRAVIS_COMMIT}" != "${MYGIT_REV}" ]]; then
        echo "Version mismatch ${TRAVIS_COMMIT} vs ${MYGIT_REV}.";
        exit 1;
    fi

  - $NOMC || export LIBRARY_PATH="${MYLIB}"
  - $NOMC || export CPATH="${MYINCLUDE}"
  - $NOMC || MYLINKFLAGS="-Wl,-rpath,${MYLIB}"

  # Mac OS X must use the same deployment target as conda-build.
  - if $MYUSEMC && [[ "${TRAVIS_OS_NAME}" == osx ]]; then
        export MACOSX_DEPLOYMENT_TARGET=10.7;
    fi


before_script:
  - cd "${TRAVIS_BUILD_DIR}/examples"


script:
  - $CXX -o testlib testlib.cpp -lObjCryst $MYLINKFLAGS
  - ./testlib


#after_success:
# - pip install $MYPIPFLAGS codecov
# - codecov
